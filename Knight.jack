class Knight {
    field boolean _clearTeam;
    field boolean _isAlive;
    field Point _position;

    constructor Knight new(Point position, boolean clearTeam) {
        let _position = position;
        let _clearTeam = clearTeam; 
        let _isAlive = true;
        return this;
    }

    method void dispose() {
        do _position.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void draw(boolean onLight) {
        var int location, x, y, xLoc, yLoc;

        let x = _position.getX();
        let y = _position.getY();
        let xLoc = x + 16;                          // offset to place in center of square
        let yLoc = y + 8;
        let location = (32 * yLoc) + (xLoc / 16);   // calc location in mem

        if(_clearTeam) {
            if(onLight) {
                do drawClearOnLight(location);
            }
            else {
                do drawClearOnDark(location);
            }
        }
        else {
            if(onLight) {
                do drawStripeOnLight(location);
            }
            else {
                do drawStripeOnDark(location);
            }
        }
        
        return;
    }

    method void drawClearOnLight(int location) {
        var int memAddress;
	    let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, 14336);
	    do Memory.poke(memAddress+32, 9216);
	    do Memory.poke(memAddress+64, 5888);
	    do Memory.poke(memAddress+96, 24960);
	    do Memory.poke(memAddress+128, -16192);
	    do Memory.poke(memAddress+160, -30688);
	    do Memory.poke(memAddress+192, -30696);
	    do Memory.poke(memAddress+224, -26684);
	    do Memory.poke(memAddress+256, -28612);
	    do Memory.poke(memAddress+288, -30720);
	    do Memory.poke(memAddress+320, 17920);
	    do Memory.poke(memAddress+352, 8576);
	    do Memory.poke(memAddress+384, 4160);
	    do Memory.poke(memAddress+416, 4144);
	    do Memory.poke(memAddress+448, 8200);
	    do Memory.poke(memAddress+480, 32760);
	    return;
    }

    method void drawClearOnDark(int location) {
        var int memAddress;
        let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, -14337);
	    do Memory.poke(memAddress+32, -9217);
	    do Memory.poke(memAddress+64, -5889);
	    do Memory.poke(memAddress+96, -24961);
	    do Memory.poke(memAddress+128, 16191);
	    do Memory.poke(memAddress+160, 30687);
	    do Memory.poke(memAddress+192, 30695);
	    do Memory.poke(memAddress+224, 26683);
	    do Memory.poke(memAddress+256, 28611);
	    do Memory.poke(memAddress+288, 30719);
	    do Memory.poke(memAddress+320, -17921);
	    do Memory.poke(memAddress+352, -8577);
	    do Memory.poke(memAddress+384, -4161);
	    do Memory.poke(memAddress+416, -4145);
	    do Memory.poke(memAddress+448, -8201);
	    do Memory.poke(memAddress+480, -32761);
	    return;
    }

    method void drawStripeOnLight(int location) {
        var int memAddress;
        let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, 14336);
	    do Memory.poke(memAddress+32, 9216);
	    do Memory.poke(memAddress+64, 7936);
	    do Memory.poke(memAddress+96, 24960);
	    do Memory.poke(memAddress+128, -64);
	    do Memory.poke(memAddress+160, -30688);
	    do Memory.poke(memAddress+192, -8);
	    do Memory.poke(memAddress+224, -24636);
	    do Memory.poke(memAddress+256, -28612);
	    do Memory.poke(memAddress+288, -2048);
	    do Memory.poke(memAddress+320, 17920);
	    do Memory.poke(memAddress+352, 16256);
	    do Memory.poke(memAddress+384, 4160);
	    do Memory.poke(memAddress+416, 8176);
	    do Memory.poke(memAddress+448, 8200);
	    do Memory.poke(memAddress+480, 32760);
	    return;
    }

    method void drawStripeOnDark(int location) {
        var int memAddress;
        let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, -14337);
	    do Memory.poke(memAddress+32, -9217);
	    do Memory.poke(memAddress+64, -7937);
	    do Memory.poke(memAddress+96, -24961);
	    do Memory.poke(memAddress+128, 63);
	    do Memory.poke(memAddress+160, 30687);
	    do Memory.poke(memAddress+192, 7);
	    do Memory.poke(memAddress+224, 24635);
	    do Memory.poke(memAddress+256, 28611);
	    do Memory.poke(memAddress+288, 2047);
	    do Memory.poke(memAddress+320, -17921);
	    do Memory.poke(memAddress+352, -16257);
	    do Memory.poke(memAddress+384, -4161);
	    do Memory.poke(memAddress+416, -8177);
	    do Memory.poke(memAddress+448, -8201);
	    do Memory.poke(memAddress+480, -32761);
	    return;
    }
}