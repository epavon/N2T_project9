class ChessPiece {
    //
    // Fields
    //

    // Two groups of chess pieces, clear pieces and stripe pieces
    field boolean _clearTeam;

    // This field denotes whether piece is still in play
    field boolean _isAlive;

    // absolute drawing position in the board in pixels
    field Point _position;

    // type of chess piece: king = 0, queen = 1, bishop = 2, knight = 3, rook = 4, pawn = 5
    field int _type;            

	//
	// Ctor / Dtor
	// 
    constructor ChessPiece new(Point position, boolean clearTeam, int type) {
        let _position   = position;
        let _clearTeam  = clearTeam; 
        let _isAlive    = true;
        let _type       = type;
        return this;
    }

    method void dispose() {
        do _position.dispose();
        do Memory.deAlloc(this);
        return;
    }

	//
	// Getters / Setters
	// 
	method Point getPosition() {
		return _position;
	}

    method boolean getIsClear() {
        return _clearTeam;
    }

    method boolean getType() {
        return _type;
    }

	//
	// Methods
	//

    method int getLocation() {
        var int location, x, y, xLoc, yLoc;

        let x = _position.getX();
        let y = _position.getY();
        let xLoc = x + 16;                          // offset to place in center of square
        let yLoc = y + 8;
        let location = (32 * yLoc) + (xLoc / 16);   // calc location in mem
        return location;
    }

    method void draw(boolean onLight) {
        do ChessPieceDrawer.draw(this, onLight);
        
        return;
    }

    
}